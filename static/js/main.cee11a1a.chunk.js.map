{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","handleKeyUpEvent","removeEventListener","this","setState","key","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBACP,SAAS,SAACC,GAAD,OAA0B,EAAKC,iBAAiBD,QAP/D,kCAWE,WACEF,SAASI,oBAAoB,QAASC,KAAKF,oBAZ/C,8BAeE,SAAiBD,GACfG,KAAKC,SAAS,CACZP,WAAYG,EAAMK,QAjBxB,oBAqBE,WACE,IAAQR,EAAeM,KAAKP,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKT,EAAD,mCAEgCA,EAFhC,KACI,kCA7BhB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.cee11a1a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener(\n      'keyup', (event: KeyboardEvent) => this.handleKeyUpEvent(event),\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUpEvent);\n  }\n\n  handleKeyUpEvent(event: KeyboardEvent) {\n    this.setState({\n      pressedKey: event.key,\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !pressedKey\n              ? 'Nothing was pressed yet'\n              : `The last pressed key is [${pressedKey}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}